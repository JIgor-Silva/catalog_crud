name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: |
          bin/rubocop -f github
          bin/rubocop -a
          bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 4421
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5

    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:4421@localhost:5432/phone_catalog_test
      DATABASE_NAME: phone_catalog_test
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: 4421

    steps:
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libpq-dev libyaml-dev node-gyp pkg-config python-is-python3 google-chrome-stable

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Configurar chave do Rails
        run: |
          echo "${{ secrets.RAILS_MASTER_KEY }}" > config/master.key
          chmod 600 config/master.key

      - name: Install Node.js dependencies
        run: npm install

      - name: Build JS com esbuild
        run: npm run build

      - name: Build CSS com PostCSS/Tailwind (se configurado)
        run: npm run build:css || echo "Tailwind n√£o configurado"

      - name: Precompilar assets
        run: bin/rails assets:precompile

      - name: Prepare Database
        run: bin/rails db:prepare

      - name: Run RSpec tests
        run: bundle exec rspec --format documentation --color

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore

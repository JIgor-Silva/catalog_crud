name: Coverage

on:
  push:
    branches:
      - main
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  coverage:
    needs: CI
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 4421
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:4421@localhost:5432/phone_catalog_test_coverage
      DATABASE_NAME: phone_catalog_test_coverage

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libpq-dev libyaml-dev node-gyp pkg-config python-is-python3

      - name: Configurar chave do Rails
        run: |
          echo "${{ secrets.RAILS_MASTER_KEY }}" > config/master.key
          chmod 600 config/master.key

      - name: Install Node.js dependencies
        run: npm install

      - name: Build JS com esbuild
        run: npm run build

      - name: Build CSS com PostCSS/Tailwind (se configurado)
        run: npm run build:css || echo "Tailwind n√£o configurado"

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            if pg_isready -U postgres -h localhost -p 5432; then
              echo "PostgreSQL is ready"
              exit 0
            fi
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
          done
          echo "PostgreSQL failed to become ready"
          exit 1

      - name: Prepare Database
        run: bin/rails db:prepare

      - name: Run tests with RSpec and generate coverage
        run: bundle exec rspec

      - name: Upload cobertura para Codecov
        uses: codecov/codecov-action@v5
        with:
          files: coverage/.resultset.json
          flags: rspec
          name: codecov-coverage-only
          fail_ci_if_error: true
